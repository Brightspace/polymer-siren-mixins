{
  "schema_version": "1.0.0",
  "mixins": [
    {
      "description": "\t",
      "summary": "",
      "path": "siren-action-mixin.js",
      "properties": [
        {
          "name": "token",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 12,
              "column": 4
            },
            "end": {
              "line": 14,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "getSirenFields",
          "description": "Returns a URLSearchParams or FormData to send with request",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 21,
              "column": 2
            },
            "end": {
              "line": 42,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "action"
            }
          ]
        },
        {
          "name": "getEntityUrl",
          "description": "Returns the request URL of the siren action. If the request is a GET or HEAD, the fields will be added to the query string",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 47,
              "column": 2
            },
            "end": {
              "line": 60,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "action"
            },
            {
              "name": "fields"
            }
          ]
        },
        {
          "name": "performSirenAction",
          "description": "Perform the specified siren action with the URLSearchParams or FormData\nIf the action type is a JSON type, the fields will be converted to a JSON object\n(don't pass a JSON object directly)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 67,
              "column": 2
            },
            "end": {
              "line": 107,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "action"
            },
            {
              "name": "fields"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 4,
          "column": 7
        },
        "end": {
          "line": 109,
          "column": 2
        }
      },
      "privacy": "public",
      "name": "SirenActionMixin",
      "attributes": [
        {
          "name": "token",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 12,
              "column": 4
            },
            "end": {
              "line": 14,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    },
    {
      "description": "\tA component mixin for HM entity with support for callback for updates\n\t- registers for store updates when attached to DOM\n\t- assumes one entity per component (maybe valid assumption)\n\t",
      "summary": "A component mixin for HM entity with support for callback for updates",
      "path": "entity-mixin.js",
      "properties": [
        {
          "name": "href",
          "type": "string | null | undefined",
          "description": "URI to fetch the entity from",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 18,
              "column": 4
            },
            "end": {
              "line": 21,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "token",
          "type": "string | null | undefined",
          "description": "Bearer Auth token to attach to entity request",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 25,
              "column": 4
            },
            "end": {
              "line": 25,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "entity",
          "type": "Object | null | undefined",
          "description": "Resultant entity as a JSON object",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 29,
              "column": 4
            },
            "end": {
              "line": 29,
              "column": 18
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "loaded",
          "type": "boolean | null | undefined",
          "description": "True if entity is loaded. False if not loaded or loading",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 33,
              "column": 4
            },
            "end": {
              "line": 36,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "_stateReceiver",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 45,
              "column": 2
            },
            "end": {
              "line": 51,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "state"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_propertiesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 53,
              "column": 2
            },
            "end": {
              "line": 65,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "props"
            },
            {
              "name": "changedProps"
            },
            {
              "name": "prevProps"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_entityChanged",
          "description": "Sets the `entity` property when Redux store updates. Can be overriden (to add special formatting)",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 2
            },
            "end": {
              "line": 73,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "entity"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 11,
          "column": 7
        },
        "end": {
          "line": 75,
          "column": 2
        }
      },
      "privacy": "public",
      "name": "EntityMixin",
      "attributes": [
        {
          "name": "href",
          "description": "URI to fetch the entity from",
          "sourceRange": {
            "start": {
              "line": 18,
              "column": 4
            },
            "end": {
              "line": 21,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "token",
          "description": "Bearer Auth token to attach to entity request",
          "sourceRange": {
            "start": {
              "line": 25,
              "column": 4
            },
            "end": {
              "line": 25,
              "column": 17
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "entity",
          "description": "Resultant entity as a JSON object",
          "sourceRange": {
            "start": {
              "line": 29,
              "column": 4
            },
            "end": {
              "line": 29,
              "column": 18
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "loaded",
          "description": "True if entity is loaded. False if not loaded or loading",
          "sourceRange": {
            "start": {
              "line": 33,
              "column": 4
            },
            "end": {
              "line": 36,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    },
    {
      "description": "    ",
      "summary": "",
      "path": "siren-entity-mixin.js",
      "properties": [
        {
          "name": "href",
          "type": "string | null | undefined",
          "description": "URI to fetch the entity from",
          "privacy": "public",
          "sourceRange": {
            "file": "entity-mixin.js",
            "start": {
              "line": 18,
              "column": 4
            },
            "end": {
              "line": 21,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "EntityMixin"
        },
        {
          "name": "token",
          "type": "string | null | undefined",
          "description": "Bearer Auth token to attach to entity request",
          "privacy": "public",
          "sourceRange": {
            "file": "entity-mixin.js",
            "start": {
              "line": 25,
              "column": 4
            },
            "end": {
              "line": 25,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "EntityMixin"
        },
        {
          "name": "entity",
          "type": "Object | null | undefined",
          "description": "Resultant entity as a JSON object",
          "privacy": "public",
          "sourceRange": {
            "file": "entity-mixin.js",
            "start": {
              "line": 29,
              "column": 4
            },
            "end": {
              "line": 29,
              "column": 18
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "EntityMixin"
        },
        {
          "name": "loaded",
          "type": "boolean | null | undefined",
          "description": "True if entity is loaded. False if not loaded or loading",
          "privacy": "public",
          "sourceRange": {
            "file": "entity-mixin.js",
            "start": {
              "line": 33,
              "column": 4
            },
            "end": {
              "line": 36,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "EntityMixin"
        }
      ],
      "methods": [
        {
          "name": "_stateReceiver",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "entity-mixin.js",
            "start": {
              "line": 45,
              "column": 2
            },
            "end": {
              "line": 51,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "state"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "EntityMixin"
        },
        {
          "name": "_propertiesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "entity-mixin.js",
            "start": {
              "line": 53,
              "column": 2
            },
            "end": {
              "line": 65,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "props"
            },
            {
              "name": "changedProps"
            },
            {
              "name": "prevProps"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "EntityMixin"
        },
        {
          "name": "_entityChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 7,
              "column": 2
            },
            "end": {
              "line": 14,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "entity"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getSubEntityByRel",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 18,
              "column": 2
            },
            "end": {
              "line": 20,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "entity"
            },
            {
              "name": "rel"
            }
          ]
        },
        {
          "name": "_getSubEntitiesByRel",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 22,
              "column": 2
            },
            "end": {
              "line": 24,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "entity"
            },
            {
              "name": "rel"
            }
          ]
        },
        {
          "name": "_getSubEntityByClass",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 26,
              "column": 2
            },
            "end": {
              "line": 28,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "entity"
            },
            {
              "name": "cls"
            }
          ]
        },
        {
          "name": "_getLinkByRel",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 30,
              "column": 2
            },
            "end": {
              "line": 32,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "entity"
            },
            {
              "name": "rel"
            }
          ]
        },
        {
          "name": "_getLinkByClass",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 34,
              "column": 2
            },
            "end": {
              "line": 36,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "entity"
            },
            {
              "name": "cls"
            }
          ]
        },
        {
          "name": "_getLinksByClass",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 38,
              "column": 2
            },
            "end": {
              "line": 40,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "entity"
            },
            {
              "name": "cls"
            }
          ]
        },
        {
          "name": "_getActionByName",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 2
            },
            "end": {
              "line": 44,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "entity"
            },
            {
              "name": "name"
            }
          ]
        },
        {
          "name": "_hasActionByName",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 46,
              "column": 2
            },
            "end": {
              "line": 48,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "entity"
            },
            {
              "name": "name"
            }
          ]
        },
        {
          "name": "_hasClass",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 50,
              "column": 2
            },
            "end": {
              "line": 52,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "entity"
            },
            {
              "name": "name"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 5,
          "column": 7
        },
        "end": {
          "line": 54,
          "column": 2
        }
      },
      "privacy": "public",
      "name": "SirenEntityMixin",
      "attributes": [
        {
          "name": "href",
          "description": "URI to fetch the entity from",
          "sourceRange": {
            "file": "entity-mixin.js",
            "start": {
              "line": 18,
              "column": 4
            },
            "end": {
              "line": 21,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "EntityMixin"
        },
        {
          "name": "token",
          "description": "Bearer Auth token to attach to entity request",
          "sourceRange": {
            "file": "entity-mixin.js",
            "start": {
              "line": 25,
              "column": 4
            },
            "end": {
              "line": 25,
              "column": 17
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "EntityMixin"
        },
        {
          "name": "entity",
          "description": "Resultant entity as a JSON object",
          "sourceRange": {
            "file": "entity-mixin.js",
            "start": {
              "line": 29,
              "column": 4
            },
            "end": {
              "line": 29,
              "column": 18
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "EntityMixin"
        },
        {
          "name": "loaded",
          "description": "True if entity is loaded. False if not loaded or loading",
          "sourceRange": {
            "file": "entity-mixin.js",
            "start": {
              "line": 33,
              "column": 4
            },
            "end": {
              "line": 36,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "EntityMixin"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "mixins": [
        "EntityMixin"
      ]
    }
  ],
  "functions": [
    {
      "name": "fetchEntityIfNeeded",
      "description": "",
      "summary": "",
      "sourceRange": {
        "file": "redux-entity-fetch.js",
        "start": {
          "line": 77,
          "column": 7
        },
        "end": {
          "line": 87,
          "column": 1
        }
      },
      "privacy": "public",
      "params": []
    },
    {
      "name": "updateEntity",
      "description": "",
      "summary": "",
      "sourceRange": {
        "file": "redux-entity-update.js",
        "start": {
          "line": 2,
          "column": 7
        },
        "end": {
          "line": 14,
          "column": 1
        }
      },
      "privacy": "public",
      "params": []
    },
    {
      "name": "startPrefetch",
      "description": "",
      "summary": "",
      "sourceRange": {
        "file": "redux-prefetch.js",
        "start": {
          "line": 2,
          "column": 7
        },
        "end": {
          "line": 6,
          "column": 1
        }
      },
      "privacy": "public",
      "params": []
    },
    {
      "name": "connectToRedux",
      "description": "",
      "summary": "",
      "sourceRange": {
        "file": "redux-connector.js",
        "start": {
          "line": 2,
          "column": 7
        },
        "end": {
          "line": 7,
          "column": 1
        }
      },
      "privacy": "public",
      "params": [],
      "return": {
        "type": "void"
      }
    }
  ]
}
